{"version":3,"sources":["ContactForm/ContactForm.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js"],"names":["NameInput","styled","input","PhoneInput","AddContactButton","button","TitleP","p","INITAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","submitForm","e","addNewContact","props","preventDefault","reset","this","onSubmit","type","onChange","disabled","Component","UserData","span","DeleteButton","ListItem","li","ContactList","contacts","deleteContact","map","contact","id","key","onClick","FilterInput","Filter","onFilterChage","length","Wrapper","div","MainTitle","h1","SubTitle","h2","App","filter","find","toLowerCase","alert","newContact","uuidv4","prevState","changeFilter","filterContacts","includes","contactsAfterDelete","console","log","contactsFromStorage","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filtredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41b18636.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport propTypes from 'prop-types';\r\n\r\nconst NameInput = styled.input`\r\n  width: 300px;\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-bottom: 20px;\r\n`;\r\nconst PhoneInput = styled.input`\r\n  width: 300px;\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-bottom: 20px;\r\n`;\r\nconst AddContactButton = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n`;\r\nconst TitleP = styled.p`\r\n  text-transform: capitalize;\r\n  text-align: center;\r\n`;\r\n\r\nconst INITAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITAL_STATE,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitForm = e => {\r\n    const { name, number } = this.state;\r\n    const { addNewContact } = this.props;\r\n    e.preventDefault();\r\n    addNewContact(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      ...INITAL_STATE,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.submitForm}>\r\n        <TitleP>type name*</TitleP>\r\n        <NameInput\r\n          type=\"text\"\r\n          value={name}\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <TitleP>type phone*</TitleP>\r\n        <PhoneInput\r\n          type=\"number\"\r\n          value={number}\r\n          name=\"number\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <AddContactButton\r\n          disabled={!this.state.name || !this.state.number}\r\n          type=\"submit\"\r\n        >\r\n          Add contact\r\n        </AddContactButton>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  addNewContact: propTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport propTypes from 'prop-types';\r\n\r\nconst UserData = styled.span`\r\n  margin-right: 16px;\r\n  display: block;\r\n`;\r\nconst DeleteButton = styled.button`\r\n  padding: 5px;\r\n  border: 1px solid;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-right: 16px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => {\r\n        const { id, name, number } = contact;\r\n        return (\r\n          <ListItem key={id}>\r\n            <UserData>\r\n              {name}: {number}\r\n            </UserData>\r\n            <DeleteButton type=\"button\" onClick={() => deleteContact(id)}>\r\n              Удалить\r\n            </DeleteButton>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  contacts: propTypes.arrayOf(propTypes.object).isRequired,\r\n  deleteContact: propTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport propTypes from 'prop-types';\r\n\r\nconst FilterInput = styled.input`\r\n  width: 300px;\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-bottom: 20px;\r\n`;\r\nconst TitleP = styled.p`\r\n  text-transform: capitalize;\r\n  text-align: center;\r\n`;\r\nconst Filter = ({ value, onFilterChage, contacts }) => {\r\n  return (\r\n    <div>\r\n      {contacts.length >= 2 && (\r\n        <div>\r\n          <TitleP>Find by contacts name</TitleP>\r\n          <FilterInput\r\n            type=\"text\"\r\n            value={value}\r\n            name=\"name\"\r\n            onChange={e => onFilterChage(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: propTypes.string.isRequired,\r\n  contacts: propTypes.arrayOf(propTypes.object).isRequired,\r\n  onFilterChage: propTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nconst Wrapper = styled.div`\n  width: 375px;\n  margin: 0 auto;\n  padding-bottom: 20px;\n  border: 1px solid;\n`;\nconst MainTitle = styled.h1`\n  text-align: center;\n`;\n\nconst SubTitle = styled.h2`\n  text-align: center;\n`;\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contactsFromStorage = localStorage.getItem('contacts');\n\n    if (contactsFromStorage) {\n      this.setState({\n        contacts: JSON.parse(contactsFromStorage),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addNewContact = (name, number) => {\n    const { contacts } = this.state;\n    const findNameInCurrentState = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (findNameInCurrentState) {\n      // eslint-disable-next-line no-alert\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, newContact],\n        };\n      });\n    }\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteContact = id => {\n    const { contacts } = this.state;\n    const contactsAfterDelete = contacts.filter(contact => contact.id !== id);\n\n    this.setState(() => {\n      return {\n        contacts: [...contactsAfterDelete],\n      };\n    });\n    console.log(id);\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filtredContacts = this.filterContacts();\n    return (\n      <Wrapper>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm addNewContact={this.addNewContact} />\n        {contacts.length > 0 && (\n          <div>\n            <SubTitle>Contacts</SubTitle>\n            <Filter\n              value={filter}\n              onFilterChage={this.changeFilter}\n              contacts={contacts}\n            />\n            <ContactList\n              contacts={filtredContacts}\n              deleteContact={this.deleteContact}\n            />\n          </div>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}